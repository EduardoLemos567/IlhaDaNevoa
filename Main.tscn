[gd_scene load_steps=10 format=3 uid="uid://be1ydm33tkxq0"]

[ext_resource type="PackedScene" uid="uid://djs6huheci0at" path="res://Prefabs/Celula.tscn" id="1_glv2v"]
[ext_resource type="Script" uid="uid://bm5c6w365y3dv" path="res://Scripts/ControleJogo.gd" id="1_uu6xs"]
[ext_resource type="Resource" uid="uid://dx8kectmgb7s2" path="res://ConfiguracaoInicial.tres" id="2_cm0pq"]
[ext_resource type="PackedScene" uid="uid://bbykhsslyfdc5" path="res://Prefabs/UiJogo.tscn" id="4_cm0pq"]

[sub_resource type="Shader" id="Shader_cm0pq"]
code = "shader_type canvas_item;

// Uniforms - these can be adjusted in the inspector
uniform float speed : hint_range(0.0, 5.0) = 1.0;
uniform float distortion_strength : hint_range(0.0, 0.1) = 0.02;
uniform vec2 wave_size = vec2(50.0, 30.0);

// Time-based sine wave function for organic movement
float sineWave(vec2 position, float time, float frequency, float wave_speed) {
    return sin(position.x * frequency + time * wave_speed) * 
           sin(position.y * frequency * 0.7 + time * wave_speed * 0.7);
}

void fragment() {
    float time = TIME * speed;
    float wave1 = sineWave(UV * wave_size, time, 0.133, 1.5);
    float wave2 = sineWave(UV * wave_size * 1.3, time * 0.5, 0.133, 1.2);
    float wave3 = sineWave(UV * wave_size * 0.7, time * 1.2, 1.33, 0.9);
    float combined_wave = (wave1 + wave2 + wave3) / 3.0;
    
    vec2 distorted_uv = UV + vec2(combined_wave, combined_wave * 0.7) * distortion_strength;
    
    COLOR = texture(TEXTURE, distorted_uv);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fos0i"]
shader = SubResource("Shader_cm0pq")
shader_parameter/speed = 1.5
shader_parameter/distortion_strength = 0.05
shader_parameter/wave_size = Vector2(50, 30)

[sub_resource type="Gradient" id="Gradient_cm0pq"]
offsets = PackedFloat32Array(0, 0.276596, 0.62766)
colors = PackedColorArray(0.156958, 0.0914278, 0.0204254, 1, 0.353388, 0.230264, 0.0625485, 1, 0.214736, 0.0981161, 0.0116884, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_fos0i"]
noise_type = 3
offset = Vector3(409.64, 238.6, 0)
domain_warp_enabled = true
domain_warp_amplitude = 100.0
domain_warp_fractal_octaves = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_3dxm6"]
height = 256
seamless = true
color_ramp = SubResource("Gradient_cm0pq")
noise = SubResource("FastNoiseLite_fos0i")

[node name="ControleJogo" type="Control" node_paths=PackedStringArray("grid", "ui_jogo")]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_uu6xs")
configuracao_inicial = ExtResource("2_cm0pq")
celula_prefab = ExtResource("1_glv2v")
grid = NodePath("GridDeCelulas")
ui_jogo = NodePath("UiJogo")

[node name="Fundo" type="TextureRect" parent="."]
texture_repeat = 2
material = SubResource("ShaderMaterial_fos0i")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = SubResource("NoiseTexture2D_3dxm6")

[node name="GridDeCelulas" type="GridContainer" parent="."]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/h_separation = 10
theme_override_constants/v_separation = 10
columns = 10

[node name="UiJogo" parent="." instance=ExtResource("4_cm0pq")]
layout_mode = 1

[connection signal="pedido_bussola" from="UiJogo" to="." method="quando_pedido_bussola"]
[connection signal="pedido_recomecar" from="UiJogo" to="." method="quando_pedido_recomecar"]
